#!/bin/bash

# Script to display SSH commands for all Space Captain instances

echo "Space Captain SSH Connection Info"
echo "================================="
echo

# Get the SSH key path from user's home directory
KEY_PATH="~/.ssh/space-captain"

# Function to get instances by Name tag (fallback method)
get_instances_by_name() {
    local name_pattern=$1
    aws ec2 describe-instances \
        --region us-east-1 \
        --filters "Name=tag:Name,Values=${name_pattern}" \
                  "Name=instance-state-name,Values=running" \
        --query 'Reservations[*].Instances[*].[PublicDnsName,InstanceId,Tags[?Key==`Name`].Value|[0]]' \
        --output text
}

# Server
echo "Server:"
echo "-------"
server_info=$(get_instances_by_name "space-captain-server")
if [ -n "$server_info" ]; then
    while IFS=$'\t' read -r dns id name; do
        echo "  ssh -i $KEY_PATH ec2-user@$dns"
    done <<< "$server_info"
else
    echo "  No running server instances found"
fi
echo

# Telemetry
echo "Telemetry:"
echo "----------"
telemetry_info=$(get_instances_by_name "space-captain-telemetry")
if [ -n "$telemetry_info" ]; then
    while IFS=$'\t' read -r dns id name; do
        echo "  ssh -i $KEY_PATH ec2-user@$dns"
    done <<< "$telemetry_info"
else
    echo "  No running telemetry instances found"
fi
echo

# Clients
echo "Clients:"
echo "--------"
client_info=$(get_instances_by_name "space-captain-client")
if [ -n "$client_info" ]; then
    count=1
    while IFS=$'\t' read -r dns id name; do
        echo "  ssh -i $KEY_PATH ec2-user@$dns"
        ((count++))
    done <<< "$client_info"
else
    echo "  No running client instances found"
fi
echo

echo "Note: Run this script from the project root directory"